for use this proyect i need: node, git and VSCode (optional)

heroku logs => ejecutar en el cmd para ver la consola de heroku

Use NPM
  npm run start => inicia el bot
  npm install -g heroku
  npm update => actualizar dependencias
  para crear una carpeta npm: npm init
  Para instalar una libreria npm: npm install(i) [--save, -D (como dependenciaDesarrollo)] (nombre libreria)
  para usar libreria nodemon: npx nodemon --help

Use Git
  git status => ver si los archivos estan en verde
  git add . => cargar archivos si estan en rojo
  git branch [name new branch] => muestra, crea y borra versiones del proyecto
  git checkout [name branch] => cambiar version del proyecto
  git log => ver logs
  git commit -m "name" => guardar carga de archivos y nombrar actualizacion
  git push (BranchDestino) (BranchOrigen) => subir archivos al repositorio
  git remote add (name repository remote) (direccion de internet)
  git help => ayuda de Git  
  git remote add DaxoGit https://github.com/Yohan205/Daxo.git

Usando zeew devuelve un link de una imagen gif:
  para enviar por send():
    sfw.hug().then((img) => message.channel.send(img));
  para enviar por embed:
    let img = await sfw.neko();
    .setImage(img);

npx eslint --init
    O problems
    O commonJS
    O none x2
    O node
    O JSON

snippets:
    cmdBot: crea un nuevo comando

Relative path:
  ctrl+shift+H

////////////////////////////////// Usando cooldown ////////////////////////////////////////////////////////
const cooldown = new Set();
        /* 
        Dentro de cada comando a usar cooldown deberá colocar este código:
        Que detendrá cualquier comando si el usuario está dentro del enfriamiento.
        */
        if (cooldown.has(message.author.id))
            return message.channel.send(`${message.author.username} utilice el comando después de 10 segundos.`);
        
        //Si no tiene cooldown se establecerá.
        cooldown.add(message.author.id);
        
        message.channel.send("**Mensaje Prueba**")

        //Quita al usuario del enfriamiento después de pasar los 10 segundos.
        setTimeout(() => {
            cooldown.delete(message.author.id);
          }, 10000);

////////////////////////////////// Usando weebhook ////////////////////////////////////////////////////////
var hook = new Discord.WebhookClient({ id: '856162171042005002', token: "YeKOnQyH0GM2JFEY1jhwezP37tqq4IlEM0qDRM73wUVSZe3pB0InaW05CF4lJxN3tqB_" });

hook.send(args[0]);

////////////////////////////////// Mutear un usuario con rol ////////////////////////////////////////////////////////

const ms = require("ms")
    let mutedRole = message.guild.roles.cache.find(x => x.name === "Muted");
    const member = message.mentions.members.first();

    let time = args[1];

    if (!args[0]) return message.reply("no has mencionado a nadie capo")

    if (!member) return message.reply("El miembro no esta en el servidor")

    if (!message.member.permissions.has("MANAGE_ROLES")) return message.reply(`No puedes ,
       no tienes permisos`)

    if (member.roles.highest.position >= message.member.roles.highest.position)
      return message.reply(`no puedes mutear a alguien con rol mayor o igual a ti`)

    if (member === message.guild.ownerId)
      return message.reply("No puedes mutear al owner")

    if (!time) return message.reply("sin tiempo especificado")



    if (mutedRole) {

      member.roles.add(mutedRole)

      message.reply("Usuario muteado con exito papi")

    } else if (!mutedRole) {

      mutedRole = message.guild.roles.cache.find(x => x.name === "muted")

      member.roles.add(mutedRole)

      message.reply("Usuario muteado con exito papi")

    } else {

      let createrol = await message.guild.roles.create({
        data: {
          name: 'Muteado',
        }
      })
      mutedRole = createrol.id
      message.guild.channels.cache.forEach(async (channel) => {
        await channel.updateOverwrite(muterole, {
          SEND_MESSAGES: false,
        });
      });
      member.roles.add(mutedRole)

      message.reply("Usuario muteado con exito")
    }
    setTimeout(() => {
      member.roles.remove(mutedRole).catch(console.error)
      message.channel.send("desmuetado!")
    }, ms(time));