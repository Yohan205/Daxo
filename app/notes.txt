/* var st1 = 5; 
  
  if (st1 <= 10){
  botxi.user.setPresence({
    status: "online",
    game: {
      name: "Minecraft",
      type: "playing"
    }
  });} if (st1 >= 50){
    botxi.user.setPresence({
    status: "online",
    game: {
      name: "Botcitos",
      type: "waching"
    }
  });} if (st1 == 20){
      botxi.user.setPresence({
    status: "online",
    game: {
      name: "b.help",
      type: "listening"
    }
  });}*/

  npm start => inicia el bot
  npm install -g heroku

  git status => ver si los archivos estan en verde
  git add . => cargar archivos si estan en rojo
  git branch [name new branch] => muestra, crea y borra versiones del proyecto
  git checkout [name branch] => cambiar version del proyecto
  git log => ver logs
  git commit -m "name" => guardar carga de archivos y nombrar actualizacion
  git push heroku master => subir archivos al servidor
  git remote add (name repository remote) (direccion de internet)

  heroku logs => ejecutar en el cmd para ver la consola de heroku

  git help => ayuda de Git
  
  git remote add clever git://git@push-n2-par-clevercloud-customers.services.clever-cloud.com/app_9a6f1be3-2f1b-486d-98b3-ccaf72b2084d.git

  /*Dentro de cada comando a usar cooldown debera colocar este código:

//Que detendra cualquier comando si el usuario esta dentro del enfriamiento.
if(cooldown.has(message.author.id)){
   message.channel.send(message.author.username+ " utilice el comando despues de 10 segundos!");
   return;
}
//Si no se encuentra dentro del enfriamiento, agrega al usuario para que
//no pueda utilizar el comando durante 10 segundos.
cooldown.add(message.author.id);

//Quita al usuario del enfriamiento después de pasar los 10 segundos.
setTimeout(() => {
  cooldown.delete(message.author.id);
}, 10000);*/